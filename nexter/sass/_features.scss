.features {
  // background-color: $color-grey-light-2;
  grid-column: center-start / center-end;

  margin: 15rem 0;

  display: grid;
  // grid-template-columns: repeat(3, 1fr); // this is commented out because we want to change the grid layout when the screen gets smaller, achieved below.

  // grid-template-rows: We dont need to define rows, all items will be placed in implicit rows

  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));  // auto-fit makes browser select as many rows as necessary to fit the content, inside the width range provided by the minmax

  grid-gap: 6rem;
  
  align-items: start;  // since this prop is stretch by default, we change it to start, so that all children items are moved to the start of the parent grid, without it all the items stretch to fill the complete parent grid, hence out-aligning the headings and texts
}

.feature {

  display: grid;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem; 
  
  &__icon {
    fill: $color-primary;
    width: 4.5rem;
    height: 4.5rem;

    // grid-row: 1 / -1;  //this will not work as -1 means end of explicit grids, but we dont have explicit grids defined in the parent container

    grid-row: 1 / span 2;  // this works for implicit grids

    transform: translateY(-1rem);  // so that the icon is centered around the heading
  }

  &__text {
    font-size: 1.7rem;
    align-items: start;
  }
}